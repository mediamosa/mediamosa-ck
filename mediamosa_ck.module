<?php
/**
 * @file
 * The MediaMosa Construction Kit module.
 */

/**
 * Implements hook_permission().
 */
function mediamosa_ck_permission() {
  return array(
    mediamosa_ck::PERMISSION_ADMIN_CONFIGURATION => array(
      'title' => t('Change MediaMosa construction kit configuration'),
      'description' => t('Users with this permission can change the MediaMosa Construction Kit configuration.'),
    ),
    mediamosa_ck::PERMISSION_ADD_MEDIA =>  array(
      'title' => t('Add media to mediamosa'),
      'description' => t('Users with this permission can add media to mediamosa.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function mediamosa_ck_menu() {
  $items = array();

  $items['admin/config/media/mediamosa_ck/config'] = array(
    'title' => 'MediaMosa construction kit',
    'description' => 'Configuration settings of the MediaMosa Construction Kit.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_ck_configuration_form'),
    'access arguments' => array(mediamosa_ck::PERMISSION_ADMIN_CONFIGURATION),
    'file' => 'mediamosa_ck.admin.inc',
  );

  $items['asset/detail/%/%/download'] = array(
    'title' => 'Download',
    'page callback' => '_mediamosa_ck_mediafile_download',
    'page arguments' => array(2, 3),
    'access arguments' => array('access content'),
    'file' => 'mediamosa_ck.inc',
  );

  $items['mediamosa/ck/json/uploadticket/create'] = array(
    'title' => 'Create the upload ticket for a file',
    'page callback' => '_mediamosa_ck_json_create_upload_ticket',
    'page arguments' => array(array('isprivate' => 'TRUE')),
    'access arguments' => array(mediamosa_ck::PERMISSION_ADD_MEDIA),
    'type' => MENU_CALLBACK,
    'file' => 'mediamosa_ck.inc',
  );

  $items['mediamosa/ck/json/connector/status'] = array(
    'title' => 'Check if the connector',
    'page callback' => '_mediamosa_ck_json_connector_status',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'mediamosa_ck.inc',
  );

  return $items;
}

/**
 * Implements hook_date_formats().
 */
function mediamosa_ck_date_format_types() {
  // Define the MediaMosa CK date format types.
  return array(
    'mediamosa_ck_normal' => t('MediaMosa Site Builder - Normal'),
    'mediamosa_ck_mf_duration' => t('MediaMosa Site Builder - Mediafile duration'),
  );
}

/**
 * Implements hook_date_formats().
 */
function mediamosa_ck_date_formats() {
  return array(
    array(
      'type' => 'mediamosa_ck_normal',
      'format' => 'd-m-Y',
    ),
    array(
      'type' => 'mediamosa_ck_normal',
      'format' => 'm-d-Y',
      'locales' => array('en', 'en-us'),
    ),
    array(
      'type' => 'mediamosa_ck_mf_duration',
      'format' => 'i:s',
      'locales' => array('en', 'en-us'),
    ),
    array(
      'type' => 'mediamosa_ck_mf_duration',
      'format' => 'H:i:s',
      'locales' => array('en', 'en-us'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function mediamosa_ck_theme() {
  return array(
    'mediamosa_ck_table' => array(
      'variables' => array(
        // Table.
        'header' => NULL,
        'rows' => NULL,
        'attributes' => array(),
        'caption' => NULL,
        'colgroups' => array(),
        'sticky' => TRUE,
        'empty' => '',
        // Selection box (optional).
        'selection' => NULL,
        'selection checkbox class' => 'mm-ck-cs-checkbox',
        // Make rows dragable.
        'draggable' => FALSE,
        // Pager (optional).
        'page' => 0,
        'item_count_total' => 0,
        'item_limit' => 25,
        'element' => 0,
        'quantity' => 10,
        'pager top' => TRUE,
        'pager bottom' => TRUE,
        'pager normal top' => FALSE,
         // Add normal Drupal theme_pager() at top. Expect usage of
         // ->extend('Pagerdefault') on used query.
        'pager normal bottom' => FALSE,
         // Add normal Drupal theme_pager() at bottom. Expect usage of
         // ->extend('Pagerdefault') on used query.

        // Note (small font, bottom right).
        'note' => NULL,
        // Caption bottom, right.
        'caption_bottom' => NULL,
        // Title, description (top).
        'title' => NULL,
        'description' => NULL,
        // Summary.
        'summary' => NULL,
      ),
      'file' => 'mediamosa_ck.theme.inc',
    ),
    'mediamosa_ck_pager' => array(
      'variables' => array(
        'page' => 0,
        'item_count_total' => 0,
        'item_limit' => 25,
        'element' => 0,
        'quantity' => 10,
      ),
      'file' => 'mediamosa_ck.theme.inc',
    ),
    'mediamosa_ck_two_column_page' => array(
      'variables' => array(
        'left' => 'left column',
        'right' => 'right column',
      ),
      'file' => 'mediamosa_ck.theme.inc',
    ),
    'mediamosa_ck_three_column_page' => array(
      'variables' => array(
        'left' => 'left column',
        'middle' => 'middle column',
        'right' => 'right column',
      ),
      'file' => 'mediamosa_ck.theme.inc',
    ),
    'mediamosa_ck_tabs' => array(
      'variables' => array(
        'tabs' => array(),
        'tab-overlay' => '',
      ),
      'file' => 'mediamosa_ck.theme.inc',
    ),
    'mediamosa_ck_popup' => array(
      'variables' => array(
        'title' => '',
        'markup' => '',
      ),
      'file' => 'mediamosa_ck.theme.inc',
    ),
  );
}

function mediamosa_ck_file_displays_alter(&$displays, $file, $view_mode) {
  $displays['media_mediamosa_image'] = array(
    'status' => 1,
    //'weight' => -99,
    'settings' => array(
      'image_style' => 'square_thumbnail',
    ),
  );
}
